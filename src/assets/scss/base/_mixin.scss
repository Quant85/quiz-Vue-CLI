@use "sass:math";

@mixin hexagon($width, $height, $color:transparent){
  min-height: $height;
  padding: 0 $width;
  background: $color;
  display: inline-block;
  position: relative;
  line-height: 1.8;
  border-top: 4px solid white;
  border-bottom: 4px solid white;
  border-radius: 1px;

  &:before, &:after {
    position: absolute;
    content: "";
    height: (($height - 8) / math.sqrt(2));
    width: ($height / math.sqrt(2)) ;
    top: 50%;
    pointer-events: none;
    /*border-top: $height / 2 solid transparent;
    border-bottom: $height / 2  solid transparent;
    transform:rotateY(180deg);*/
  }
  &:before {
    //left: 100%;
    left: 100%;
    top:-4px;
    transform-origin: 0 0;
    border-top: 4px solid white;
    border-right: 4px solid white;
    transform: rotate(47deg)skew(-2deg);
    border-radius: 2px;
    //border-right: $height / 2 solid $color;
  }
  &:after {
    /*right: 100%;
    border-left: $height / 2 solid $color;*/
    left: 0;
    top:-4px;
    transform-origin: 0 0;
    border-bottom: 4px solid white;
    border-left: 4px solid white;
    transform: rotate(47deg) skew(-2deg);
    border-radius: 2px;
  }
}

@mixin font-p($font-family:('Roboto,'sans-serif),$weight:400,$color:white, $size:0.8rem){
  font-family: $font-family;
  font-weight: $weight;
  font-size: $size;
  color: $color;
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{
    inspect(map-get($breakpoints, $breakpoint))
    } {
      @content;
    }
  }
  @else {
    @warn "Questo valore non pu√≤ esser recuperato da `#{$breakpoint}`."
            + "i breakpoint disponibili sono: `#{map-keys($breakpoints)}`";
  }
}